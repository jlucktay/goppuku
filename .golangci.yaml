version: '2'

formatters:
  enable:
    - gci
    - gofmt
    - gofumpt

  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(go.jlucktay.dev)
        - prefix(go.jlucktay.dev/goppuku)

    gofmt:
      simplify: true

    gofumpt:
      extra-rules: true

  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new-from-rev: origin/main

linters:
  enable:
    - asciicheck
    - bodyclose
    - dogsled
    - dupl
    - err113
    - errorlint
    - goconst
    - gocritic
    - godot
    - godox
    - gosec
    - nakedret
    - nestif
    - nlreturn
    - noctx
    - nolintlint
    - revive
    - staticcheck
    - unconvert
    - unparam
    - whitespace
    - wrapcheck
    - wsl

  settings:
    dogsled:
      max-blank-identifiers: 2

    dupl:
      threshold: 50

    errcheck:
      check-type-assertions: true
      check-blank: true

    errorlint:
      errorf: true

    goconst:
      min-len: 3
      min-occurrences: 3

    godot:
      scope: toplevel
      capital: true

    govet:
      enable-all: true

    nakedret:
      max-func-lines: 25

    nestif:
      min-complexity: 4

    nlreturn:
      block-size: 3

    nolintlint:
      require-explanation: true
      require-specific: true
      allow-unused: false

    unparam:
      check-exported: true

    whitespace:
      multi-if: false
      multi-func: false

    wsl:
      strict-append: true
      allow-assign-and-call: true
      allow-multiline-assign: true
      force-case-trailing-whitespace: 0
      allow-trailing-comment: false
      allow-separated-leading-comment: false
      allow-cuddle-declarations: false
      force-err-cuddling: true

  exclusions:
    generated: lax
    rules:
      - path: (.+)\.go$
        text: '^exported: exported var Err[A-Za-z]+ should have comment or be unexported$'
    paths:
      - third_party$
      - builtin$
      - examples$

run:
  modules-download-mode: readonly
